diff --git a/crypto/apr_crypto_openssl.c b/crypto/apr_crypto_openssl.c
index 310bb2c..ce041e0 100644
--- a/crypto/apr_crypto_openssl.c
+++ b/crypto/apr_crypto_openssl.c
@@ -47,6 +47,9 @@
 #define APR_USE_OPENSSL_PRE_1_1_API (OPENSSL_VERSION_NUMBER < 0x10100000L)
 #endif
 #endif
+#ifndef APR_USE_OPENSSL_PRE_3_0_API
+#define APR_USE_OPENSSL_PRE_3_0_API (OPENSSL_VERSION_NUMBER < 0x30000000L)
+#endif
 
 struct apr_crypto_t {
     apr_pool_t *pool;
@@ -58,7 +61,9 @@ struct apr_crypto_t {
 };
 
 struct apr_crypto_config_t {
+#if APR_USE_OPENSSL_PRE_3_0_API
     ENGINE *engine;
+#endif
 };
 
 struct apr_crypto_key_t {
@@ -115,7 +120,9 @@ static apr_status_t crypto_shutdown(void)
 {
     ERR_free_strings();
     EVP_cleanup();
+#if APR_USE_OPENSSL_PRE_3_0_API
     ENGINE_cleanup();
+#endif
     return APR_SUCCESS;
 }
 
@@ -138,8 +145,10 @@ static apr_status_t crypto_init(apr_pool_t *pool, const char *params,
     ERR_load_crypto_strings();
     /* SSL_load_error_strings(); */
     OpenSSL_add_all_algorithms();
+#if APR_USE_OPENSSL_PRE_3_0_API
     ENGINE_load_builtin_engines();
     ENGINE_register_all_complete();
+#endif
 
     apr_pool_cleanup_register(pool, pool, crypto_shutdown_helper,
             apr_pool_cleanup_null);
@@ -203,12 +212,13 @@ static apr_status_t crypto_block_cleanup_helper(void *data)
  */
 static apr_status_t crypto_cleanup(apr_crypto_t *f)
 {
-
+#if APR_USE_OPENSSL_PRE_3_0_API
     if (f->config->engine) {
         ENGINE_finish(f->config->engine);
         ENGINE_free(f->config->engine);
         f->config->engine = NULL;
     }
+#endif
     return APR_SUCCESS;
 
 }
@@ -322,6 +332,7 @@ static apr_status_t crypto_make(apr_crypto_t **ff,
     apr_pool_cleanup_register(pool, f, crypto_cleanup_helper,
             apr_pool_cleanup_null);
 
+#if APR_USE_OPENSSL_PRE_3_0_API
     if (engine) {
         config->engine = ENGINE_by_id(engine);
         if (!config->engine) {
@@ -333,6 +344,7 @@ static apr_status_t crypto_make(apr_crypto_t **ff,
             return APR_EINITENGINE;
         }
     }
+#endif
 
     return APR_SUCCESS;
 
@@ -665,12 +677,20 @@ static apr_status_t crypto_block_encrypt_init(apr_crypto_block_t **ctx,
     }
 
     /* set up our encryption context */
+#if APR_USE_OPENSSL_PRE_3_0_API
 #if CRYPTO_OPENSSL_CONST_BUFFERS
     if (!EVP_EncryptInit_ex(block->cipherCtx, key->cipher, config->engine,
             key->key, usedIv)) {
 #else
         if (!EVP_EncryptInit_ex(block->cipherCtx, key->cipher, config->engine, (unsigned char *) key->key, (unsigned char *) usedIv)) {
 #endif
+#else
+#if CRYPTO_OPENSSL_CONST_BUFFERS
+    if (!EVP_EncryptInit_ex2(block->cipherCtx, key->cipher, key->key, usedIv, NULL)) {
+#else
+        if (!EVP_EncryptInit_ex2(block->cipherCtx, key->cipher, (unsigned char *) key->key, (unsigned char *) usedIv, NULL)) {
+#endif
+#endif
         return APR_EINIT;
     }
 
@@ -835,12 +855,21 @@ static apr_status_t crypto_block_decrypt_init(apr_crypto_block_t **ctx,
     }
 
     /* set up our encryption context */
+#if APR_USE_OPENSSL_PRE_3_0_API
 #if CRYPTO_OPENSSL_CONST_BUFFERS
     if (!EVP_DecryptInit_ex(block->cipherCtx, key->cipher, config->engine,
             key->key, iv)) {
 #else
         if (!EVP_DecryptInit_ex(block->cipherCtx, key->cipher, config->engine, (unsigned char *) key->key, (unsigned char *) iv)) {
 #endif
+#else
+#if CRYPTO_OPENSSL_CONST_BUFFERS
+    if (!EVP_DecryptInit_ex2(block->cipherCtx, key->cipher, key->key, iv, NULL)) {
+#else
+        if (!EVP_DecryptInit_ex2(block->cipherCtx, key->cipher, (unsigned char *) key->key, (unsigned char *) iv, NULL)) {
+#endif
+
+#endif
         return APR_EINIT;
     }
 
